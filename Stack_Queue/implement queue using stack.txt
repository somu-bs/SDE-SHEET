// TC - O(N) 
// SC - O(2N)

push(x)

input->output
put x in input
output->input

top() input.top()

pop() input.pop();



class MyQueue {
private:
    stack<int> first, second;
public:
    MyQueue() {
    }
    
    void push(int x) {
        // s1 -> s2
        while(!first.empty()) {
            second.push(first.top());
            first.pop();
        }
        // push to s1
        first.push(x);
        // s2 -> s1
        while(!second.empty()) {
            first.push(second.top());
            second.pop();
        }
    }
    
    int pop() {
        int pop = first.top();
        first.pop();
        return pop;
    }
    
    int peek() {
        return first.top();
    }
    
    bool empty() {
        return first.empty();
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */